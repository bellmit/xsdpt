package com.nju.sdpt.mapper;

import com.nju.sdpt.entity.*;
import com.nju.sdpt.model.EmssdModel;
import com.nju.sdpt.model.PubYysdSsdrModel;
import com.nju.sdpt.viewobject.SsdrVO;
import org.apache.ibatis.annotations.*;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.annotation.Caching;
import org.springframework.stereotype.Repository;

import java.util.List;
@Mapper
@Repository
public interface PubYysdSsdrEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_YYSD_SSDR
     *
     * @mbggenerated
     */

    int deleteByPrimaryKey(PubYysdSsdrEntityKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_YYSD_SSDR
     *
     * @mbggenerated
     */
    int insert(PubYysdSsdrEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_YYSD_SSDR
     *
     * @mbggenerated
     */
    int insertSelective(PubYysdSsdrEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_YYSD_SSDR
     *
     * @mbggenerated
     */

    PubYysdSsdrEntity selectByPrimaryKey(PubYysdSsdrEntityKey key);

    @Select("select * from PUB_YYSD_SSDR WHERE YYSDBH=#{yysdbh} AND SSDRBH=#{ssdrbh}")
    PubYysdSsdrModel findByPrimaryKey(@Param("yysdbh")Integer yysdbh,@Param("ssdrbh")Integer ssdrbh);

    @Select("select * from PUB_YYSD_SSDR ")
    List<PubYysdSsdrEntity> findAllSsdr();

    @Select("select * from RPO_EMS_INFO ")
    List<RpoEmsInfoEntity> findAllEms();

    @Select("select * from PUB_DXTZ_INFO ")
    List<PubDxtzInfoEntity> findAllDx();



    @Select("select count(1) from PUB_YYSD_SSDR WHERE YYSDBH=#{yysdbh} AND SSDRBH=#{ssdrbh}")
    int exists(@Param("yysdbh")Integer yysdbh,@Param("ssdrbh")Integer ssdrbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_YYSD_SSDR
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(PubYysdSsdrEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_YYSD_SSDR
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(PubYysdSsdrEntity record);

    /**
     * 查询正在修复中的记录
     * @return
     */
    @Select(value = "SELECT * FROM PUB_YYSD_SSDR SDP WHERE SDP.REPAIRSTATUS = 'RPBS002' AND SDP.REPAIRBATCHNO IS NOT NULL")
    List<PubYysdSsdrEntity> selectRepairingList();

    @Select(value = "SELECT * FROM PUB_YYSD_SSDR SDP WHERE SDP.YYSDBH = #{yysdbh}")
    List<PubYysdSsdrModel> selectByYysdbh(@Param("yysdbh") Integer yysdbh);


    @Select(value =  "SELECT A.SSDRBH," +
            "       A.SSDRMC," +
            "       CASE" +
            "           WHEN A.SDJG is NULL THEN '待送达'" +
            "           WHEN A.SDJG = 1 THEN '送达成功'" +
            "           WHEN A.SDJG = 2 THEN '送达失败'" +
            "           ELSE '送达中' END SDZT," +
            "       CASE" +
            "           WHEN A.SFTYDZSD is NULL THEN '暂无'" +
            "           WHEN A.SFTYDZSD = 1 THEN '是'" +
            "           ELSE '否' END SFTYDZSD," +
            "       CASE" +
            "           WHEN A.SFQSSDDZQRS is NULL THEN '暂无'" +
            "           WHEN A.SFQSSDDZQRS = 1 THEN '是'" +
            "           ELSE '否' END SFQSSDDZQRS" +
            " FROM PUB_YYSD_SSDR A" +
            " WHERE EXISTS(SELECT 1" +
            "             FROM PUB_YYSD_JB" +
            "             WHERE AJXH = #{ajxh}" +
            "               AND FYBH = #{fybh}" +
            "               AND A.YYSDBH = YYSDBH)")
    @ResultMap("SsdrVOResultMap")
    List<SsdrVO> getSsdrxxListByAjxhAndFybh(@Param("ajxh")Integer ajxh,@Param("fybh")String fybh);


    @SelectProvider(type = PubYysdSsdrEntityMapper.SqlProvider.class,method = "selectByYysdbhs")
    List<PubYysdSsdrEntity> selectByYysdbhs(@Param("yysdbhs") String yysdbhs);

    @SelectProvider(type = PubYysdSsdrEntityMapper.SqlProvider.class,method = "updateSdjgByYysdbhAndSsdrbh")
    void updateSdjgByYysdbhAndSsdrbh(@Param("yysdbh") Integer yysdbh, @Param("ssdrbh") Integer ssdrbh, @Param("sdjg") Integer sdjg);

    @Select(value = "SELECT YYSDBH,SSDRBH FROM PUB_YYSD_SSDR SDP WHERE SDP.SDJG IS NULL")
    List<PubYysdSsdrEntity> selectSdjgIsNull();

    @Select(value = "SELECT DSRJC FROM DSR_JB WHERE AJXH=#{AJXH} and DSRBH=#{DSRBH}")
    String getDsrJc(@Param("AJXH") Integer AJXH, @Param("DSRBH")Integer DSRBH);

    @Select(value = "SELECT * FROM DSR_JB WHERE AJXH=#{AJXH}")
    List<DsrJbEntity> getDsrJbByAjxh(@Param("AJXH")Integer AJXH);

    List<SsdrHmEntity> getSsdrHms(@Param("YYSDBH")Integer YYSDBH);

    @Select(value = "SELECT MAX(SSDRBH) FROM PUB_YYSD_SSDR WHERE YYSDBH=#{YYSDBH}")
    Integer getMaxSsdrbh(@Param("YYSDBH")Integer YYSDBH);

    class SqlProvider {
        public String selectByYysdbhs(@Param("yysdbhs") String yysdbhs){
            StringBuilder sql = new StringBuilder();
            sql.append("SELECT * FROM PUB_YYSD_SSDR WHERE PUB_YYSD_SSDR.YYSDBH IN ( "+yysdbhs+")");
            return sql.toString();
        }
        public String updateSdjgByYysdbhAndSsdrbh(@Param("yysdbh") Integer yysdbh,@Param("ssdrbh")  Integer ssdrbh, @Param("sdjg") Integer sdjg){
            StringBuilder sql = new StringBuilder();
            sql.append("UPDATE PUB_YYSD_SSDR SET SDJG = ").append(sdjg)
                    .append(" WHERE YYSDBH = ").append(yysdbh).append(" AND SSDRBH = ").append(ssdrbh);
            return sql.toString();
        }
    }
}