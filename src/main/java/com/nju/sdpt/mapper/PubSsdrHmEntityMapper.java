package com.nju.sdpt.mapper;

import com.nju.sdpt.entity.PubSsdrHmEntity;
import com.nju.sdpt.model.PubSsdrHmEntityModel;
import com.nju.sdpt.viewobject.QuerySdpPhoneVo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.springframework.stereotype.Repository;

import java.util.HashMap;
import java.util.List;
@Mapper
@Repository
public interface PubSsdrHmEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_SSDR_HM
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer bh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_SSDR_HM
     *
     * @mbggenerated
     */
    int insert(PubSsdrHmEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_SSDR_HM
     *
     * @mbggenerated
     */
    int insertSelective(PubSsdrHmEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_SSDR_HM
     *
     * @mbggenerated
     */
    PubSsdrHmEntity selectByPrimaryKey(Integer bh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_SSDR_HM
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(PubSsdrHmEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_SSDR_HM
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(PubSsdrHmEntity record);

    @Select("SELECT MAX(bh) FROM PUB_SSDR_HM")
    int getMaxNumber();


    @SelectProvider(type = SqlProviderSsdrHm.class,method = "querySdpPhone")
    List<PubSsdrHmEntity> querySdpPhone(@Param("querySdpPhoneVo") QuerySdpPhoneVo querySdpPhoneVo);

    @Select("SELECT COUNT(*) FROM PUB_SSDR_HM WHERE sdp_name = #{sdpName} AND id_card = #{idCard} AND show_tel = #{showTel}")
    Integer countByNameAndPhone(@Param("sdpName")String sdpName,@Param("idCard") String idCard,@Param("showTel") String showTel);

    @SelectProvider(type = SqlProviderSsdrHm.class,method = "selectHisYYsdData_entry")
    List<String> selectHisYYsdData_entry(@Param("ssdrmc") String ssdrmc, @Param("sfzhm") String sfzhm, @Param("yysdbh") Integer yysdbh);

    @SelectProvider(type = SqlProviderSsdrHm.class,method = "selectHisYYsdData_repair")
    List<PubSsdrHmEntity> selectHisYYsdData_repair(@Param("ssdrmc") String ssdrmc, @Param("sfzhm") String sfzhm, @Param("yysdbh") Integer yysdbh);

    @Select("SELECT  SENDSTATE newSendState,FWZT newFwzt FROM PUB_DXTZ_INFO WHERE HMBH = ${hmbh} and TARGETTEL = #{operatorTel} ORDER BY CREATETIME DESC limit 1")
    PubSsdrHmEntityModel selectQueryZt(@Param("hmbh") Integer bh,@Param("operatorTel")  String operatorTel);

    @Select("(select dh.show_tel from PUB_YYSD_JB jb,PUB_SSDR_HM dh " +
            "where jb.YYSDBH = dh.YYSDBH and jb.AJXH = #{ajxh} and jb.FYBH = #{fybh} and dh.SSDRBH = #{dsrbh} and dh.HMLY = 'FGEDIT') " +
            "union (select distinct dh.show_tel from PUB_YYSD_JB jb,PUB_SSDR_HM dh,PUB_CAXX ca " +
            "where jb.YYSDBH = dh.YYSDBH and ca.AJXH = #{ajxh} and jb.FYBH = #{fybh} and dh.SSDRBH = #{dsrbh} and dh.HMLY = 'FGEDIT' " +
            "and jb.AJXH = -1 and ca.YYSDBH = jb.YYSDBH) ")
    List<String> getFgeditDsrdh(@Param("ajxh") Integer ajxh,@Param("fybh")  String fybh,@Param("dsrbh")  Integer dsrbh);

    class SqlProviderSsdrHm{

        public String selectHisYYsdData_entry(@Param("ssdrmc")String ssdrmc, @Param("sfzhm")String sfzhm, @Param("yysdbh") Integer yysdbh){
            StringBuilder sql = new StringBuilder();
            sql.append(" SELECT DISTINCT hm.show_tel FROM PUB_SSDR_HM hm ");
            sql.append(" LEFT JOIN PUB_YYSD_SSDR ssdr ON ssdr.YYSDBH = hm.YYSDBH AND ssdr.SSDRBH = hm.SSDRBH ");
            sql.append(" where ssdr.SFZHM is not NULL and (HMLY IS NULL or HMLY = 'FGEDIT')  and (hm.label is null or hm.label != 'disable') and hm.BH is not null AND hm.operator_type = 'ENTRY' ");
            sql.append(" and ssdr.SSDRMC = '"+ssdrmc+"' AND ssdr.SFZHM = '"+sfzhm+"' and ssdr.YYSDBH != ").append(yysdbh);
            return sql.toString();
        }
        public String selectHisYYsdData_repair(@Param("ssdrmc")String ssdrmc, @Param("sfzhm")String sfzhm , @Param("yysdbh") Integer yysdbh){
            StringBuilder sql = new StringBuilder();
            sql.append(" SELECT operator_type operatorType, show_tel showTel, operator_tel operatorTel, tel_batch_no telBatchNo, end_time endTime " +
                    " FROM PUB_SSDR_HM hm ");
            sql.append(" LEFT JOIN PUB_YYSD_SSDR ssdr ON ssdr.YYSDBH = hm.YYSDBH AND ssdr.SSDRBH = hm.SSDRBH ");
            sql.append(" where ssdr.SFZHM is not NULL and hm.HMLY IS NULL and (hm.label is null or hm.label != 'disable') and hm.BH is not null");
            sql.append(" and hm.operator_type != 'ENTRY' AND hm.end_time > getdate() ");
            sql.append(" and ssdr.SSDRMC = '"+ssdrmc+"' AND ssdr.SFZHM = '"+sfzhm+"' and ssdr.YYSDBH != ").append(yysdbh);
            return sql.toString();
        }
        public String querySdpPhone(@Param("querySdpPhoneVo") QuerySdpPhoneVo querySdpPhoneVo){
            StringBuilder sql = new StringBuilder();

            sql.append("SELECT BH,NEWPHONESTATUS,ISCONFIRM, YYSDBH,sdp_name sdpName, id_card idCard, operator_type operatorType, show_tel showTel, operator_tel operatorTel, tel_batch_no telBatchNo, end_time endTime, \n" +
                    " create_time createTime,SSDRBH,HMLY,label FROM PUB_SSDR_HM hm where hm.YYSDBH = ");
            sql.append(querySdpPhoneVo.getYysdBh());
            if(null != querySdpPhoneVo.getSsdrbh()){
                sql.append(" and hm.SSDRBH = ");
                sql.append(querySdpPhoneVo.getSsdrbh());
            }
            sql.append(" order by create_time desc");
            return sql.toString();
        }

    }
    @Select(value = "select show_tel showTel,BH from PUB_SSDR_HM where YYSDBH = #{yysdBh} and SSDRBH = #{ssdrbh}" )
    List<PubSsdrHmEntity> selectByIdCard(@Param("yysdBh") Integer yysdBh,@Param("ssdrbh") Integer ssdrbh);

    @Select(value = "update PUB_SSDR_HM set NEWPHONESTATUS = #{newPhoneStatus}  where BH = #{bh}" )
    void updateStatus(@Param("newPhoneStatus")Integer newPhoneStatus,@Param("bh") Integer bh);


    @Select(value = "select show_tel showTel from PUB_SSDR_HM where YYSDBH = #{yysdBh} and SSDRBH = #{ssdrbh}" )
    List<String> selectByYysdbhAndSsdrbh(@Param("yysdBh")Integer yysdBh,@Param("ssdrbh") Integer ssdrbh);

    @Select("SELECT case when ISCONFIRM = 1 then '送达中心确认' end       IS_CONFIRMED," +
            "       case when operator_type = 'CUCC' then '修复状态' end IS_REPAIRED," +
            "       show_tel                                            TEL  " +
            "       FROM PUB_SSDR_HM WHERE YYSDBH = #{yysdBh} and SSDRBH = #{ssdrbh} and (HMLY not in ('HIS_CASE','HIS_YYSD') or HMLY is null)")
    List<HashMap<String,String>> selectDhListMapByYysdbhAndSsdrbh(@Param("yysdBh")Integer yysdBh, @Param("ssdrbh") Integer ssdrbh);


    @Select("SELECT case when ISCONFIRM = 1 then '送达中心确认' end       IS_CONFIRMED," +
            "       case when operator_type = 'CUCC' then '修复状态' end IS_REPAIRED," +
            "       show_tel                                            TEL  " +
            "       FROM PUB_SSDR_HM WHERE YYSDBH = #{yysdBh} and SSDRBH = #{ssdrbh} and isconfirm = 1 and (HMLY not in ('HIS_CASE','HIS_YYSD') or HMLY is null)")
    List<HashMap<String,String>> selectQrDhListMapByYysdbhAndSsdrbh(@Param("yysdBh")Integer yysdBh, @Param("ssdrbh") Integer ssdrbh);

}