package com.nju.sdpt.mapper;

import com.nju.sdpt.entity.PubZjsdInfoEntity;
import com.nju.sdpt.model.ZjsdModel;
import com.nju.sdpt.util.StringUtil;
import com.nju.sdpt.viewobject.ReportQueryVo;
import com.nju.sdpt.viewobject.ZjsdLoadListVo;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Objects;
@Mapper
@Repository
public interface PubZjsdInfoEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer zjsdbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    int insert(PubZjsdInfoEntity record);

    int insertAndReturnID(PubZjsdInfoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    int insertSelective(PubZjsdInfoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    PubZjsdInfoEntity selectByPrimaryKey(Integer zjsdbh);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(PubZjsdInfoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(PubZjsdInfoEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUB_ZJSD_INFO
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(PubZjsdInfoEntity record);


    @Select("select max(zjsdbh)\n" +
            "from pub_zjsd_info\n" +
            "where yysdbh=#{yysdbh} and ssdrbh=#{ssdrbh};")
    int selectMaxNumber(@Param("yysdbh")int yysdbh,@Param("ssdrbh")int ssdrbh);

    @SelectProvider(type = SqlProviderLylq.class,method = "loadList")
    List<ZjsdModel> loadList(@Param("zjsdLoadListVo") ZjsdLoadListVo zjsdLoadListVo);

    @Select(value = "SELECT * FROM PUB_ZJSD_INFO WHERE YYSDBH = #{yysdbh} AND SSDRBH = #{ssdrbh} ORDER BY SMSJ DESC")
    List<PubZjsdInfoEntity> selectListByYysdbhAndSsdrbh(@Param("yysdbh") Integer yysdbh, @Param("ssdrbh") Integer ssdrbh);

    @Select(value = "SELECT ssdr.SSDRMC,zjsd.* FROM PUB_ZJSD_INFO zjsd " +
            " LEFT JOIN PUB_YYSD_SSDR ssdr ON ssdr.SSDRBH = zjsd.SSDRBH and ssdr.YYSDBH = zjsd.YYSDBH" +
            " WHERE zjsd.YYSDBH = #{yysdbh} ORDER BY SMSJ")
    List<ZjsdModel> selectListByYysdbh(@Param("yysdbh") Integer yysdbh);

    @Select(value = "SELECT dxtz.* from PUB_ZJSD_INFO dxtz " +
            " LEFT JOIN PUB_YYSD_SSDR ssdr ON dxtz.YYSDBH = ssdr.YYSDBH AND dxtz.SSDRBH = ssdr.SSDRBH " +
            " WHERE ssdr.SSDRMC = #{ssdrmc} AND ssdr.SFZHM = #{sfzhm} order by dxtz.CJSJ desc")
    List<PubZjsdInfoEntity> queryByssdrMcAndSfzhm(@Param("ssdrmc") String ssdrmc, @Param("sfzhm") String sfzhm);

    @Select(" SELECT ssdr.SSDRMC,zjsd.* FROM PUB_ZJSD_INFO zjsd\n" +
            "  LEFT JOIN PUB_YYSD_SSDR ssdr ON ssdr.YYSDBH = zjsd.YYSDBH AND ssdr.SSDRBH = zjsd.SSDRBH\n" +
            " WHERE zjsd.AJXH = #{ajxh} and zjsd.FYBH = #{fybh}")
    List<ZjsdModel> findByAjxhAndFybh(@Param("ajxh") String ajxh, @Param("fybh") String fybh);

    @Select(" SELECT ssdr.SSDRMC,zjsd.* " +
            " FROM PUB_ZJSD_INFO zjsd " +
            " LEFT JOIN PUB_YYSD_SSDR ssdr ON ssdr.YYSDBH = zjsd.YYSDBH AND ssdr.SSDRBH = zjsd.SSDRBH " +
            " WHERE ssdr.YYSDBH is not NULL " +
            " and zjsd.YYSDBH = ${yysdbh}")
    List<ZjsdModel> findByYysdbh(@Param("yysdbh") Integer yysdbh);

    @SelectProvider(type = PubZjsdInfoEntityMapper.SqlProviderLylq.class,method = "ljNum")
    Integer ljNum(@Param("queryVo") ReportQueryVo queryVo);

    class SqlProviderLylq {

        public String ljNum(@Param("queryVo") ReportQueryVo queryVo){
            StringBuilder sql = new StringBuilder();
            sql.append("SELECT count(0) FROM PUB_ZJSD_INFO zjsd");
            sql.append(" LEFT JOIN PUB_YYSD_JB jb ON jb.YYSDBH = zjsd.YYSDBH ");
            sql.append(" left join PUB_YYSD_RYXX ry on ry.WWEMPID = zjsd.CJR ");
            if(Objects.equals(queryVo.getSdptRy(),true)){
                //工单人员权限
                sql.append(" where (ry.YHBH = '").append(queryVo.getYhbh()).append("' OR jb.FYBH in ('").append(StringUtil.splitJoint(queryVo.getFybhSet(),"','")).append("') )");
            }else {
                //法官权限
                Integer authority = queryVo.getAuthority();
                sql.append(" where ( " +
                        "jb.FYBH in ('").append(StringUtil.splitJoint(queryVo.getFybhSet(),"','")).append("') ");
                if(Objects.equals(3,authority) || Objects.equals(4,authority)){
                    //部门权限
                    sql.append(" and jb.BMBH = '").append(queryVo.getBmbh()).append("'");
                }
                if(Objects.equals(4,authority)){
                    sql.append(" and jb.YYRXM = '").append(queryVo.getFgmc()).append("'");
                }
                sql.append(" ) ");
            }
            if(StringUtil.isNotBlank(queryVo.getStartTime()) && StringUtil.isNotBlank(queryVo.getEndTime())){
                sql.append(" and  zjsd.CJSJ >= '").append(queryVo.getStartTime()).append("' and zjsd.CJSJ < '").append(queryVo.getEndTime()).append("'");
            }
            if(StringUtil.isNotBlank(queryVo.getTsName())) {
                sql.append(" and jb.bmmc = '").append(queryVo.getTsName()).append("'");
            }
            if(StringUtil.isNotBlank(queryVo.getDsrDw())) {
                sql.append("and (jb.YYSDBH,zjsd.SSDRBH) in (select YYSDBH,SSDRBH from pub_yysd_ssdr where ssdrssdw = '").append(queryVo.getDsrDw()).append("')");
            }
            System.out.println("累计直接送达------------------------"+ "ljzjsdnum");
            System.out.print(sql.toString());
            return sql.toString();
        }
        public String loadList(@Param("zjsdLoadListVo") ZjsdLoadListVo zjsdLoadListVo) {
            StringBuilder sql = new StringBuilder();
            //主句
            sql.append("SELECT gd.AH,ssdr.SSDRMC,zjsd.* FROM PUB_ZJSD_INFO zjsd "
                    + "LEFT JOIN PUB_YYSD_JB gd ON gd.YYSDBH = zjsd.YYSDBH"
                    + " LEFT JOIN PUB_YYSD_SSDR ssdr ON ssdr.SSDRBH = zjsd.SSDRBH and ssdr.YYSDBH = zjsd.YYSDBH");
            //条件
            sql.append(" WHERE gd.GDRYXM = '" + zjsdLoadListVo.getGdryxm() + "'");
            if (null != zjsdLoadListVo.getQszt()) {
                if (Objects.equals(zjsdLoadListVo.getQszt(), 0)) {
                    sql.append(" and (zjsd.QSZT = 1 or zjsd.QSZT = 2 or zjsd.QSZT = 3 or zjsd.QSZT is NULL) ");
                } else {
                    sql.append(" and zjsd.QSZT = " + zjsdLoadListVo.getQszt());
                }
            }
            sql.append(" order by zjsd.CJSJ desc");
            return sql.toString();
        }
    }
    @Select(value = "update PUB_ZJSD_INFO SET ZJSDJG =#{zjsdjg} where ZJSDBH = #{zjsdbh}")
    Boolean updateZjsdById(@Param( "zjsdjg") Integer zjsdjg ,@Param( "zjsdbh") Integer zjsdbh);

    @Select(value = "update PUB_ZJSD_INFO SET SDHZ =#{sdhz} where ZJSDBH = #{zjsdbh}")
    Boolean updateZjsdSdhzById(@Param( "sdhz") String sdhz ,@Param( "zjsdbh") Integer zjsdbh);

    @Update(value = "update PUB_ZJSD_INFO set SFSCWJ ='Y',WJID = #{wjid},WJMC = #{wjmc} where YYSDBH = #{yysdbh} and ZJSDBH = #{zjsdbh}")
    void updateZjsdWjStatus(@Param("yysdbh")Integer yysdbh,@Param("zjsdbh")Integer zjsdbh,@Param("wjid")String wjid,@Param("wjmc")String wjmc);
}